{
  "version": 3,
  "sources": ["../../../app/routes/contacts.$contactId_.edit.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/contacts.$contactId_.edit.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/contacts.$contactId_.edit.tsx\");\n  import.meta.hot.lastModified = \"1701241806132.223\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData, useNavigate } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\nimport { getContact, updateContact } from \"../data\";\nexport const action = async ({\n  params,\n  request\n}) => {\n  invariant(params.contactId, \"Missing contactId param\");\n  const formData = await request.formData();\n  const updates = Object.fromEntries(formData);\n  await updateContact(params.contactId, updates);\n  return redirect(`/contacts/${params.contactId}`);\n};\nexport const loader = async ({\n  params\n}) => {\n  invariant(params.contactId, \"Missing contactId param\");\n  const contact = await getContact(params.contactId);\n  if (!contact) {\n    throw new Response(\"Not Found\", {\n      status: 404\n    });\n  }\n  return json({\n    contact\n  });\n};\nexport default function EditContact() {\n  _s();\n  const {\n    contact\n  } = useLoaderData();\n  const navigate = useNavigate();\n  return <Form id=\"contact-form\" method=\"post\">\n      <p>\n        <span>Name</span>\n        <input defaultValue={contact.first} aria-label=\"First name\" name=\"first\" type=\"text\" placeholder=\"First\" />\n        <input aria-label=\"Last name\" defaultValue={contact.last} name=\"last\" placeholder=\"Last\" type=\"text\" />\n      </p>\n      <label>\n        <span>Twitter</span>\n        <input defaultValue={contact.twitter} name=\"twitter\" placeholder=\"@jack\" type=\"text\" />\n      </label>\n      <label>\n        <span>Avatar URL</span>\n        <input aria-label=\"Avatar URL\" defaultValue={contact.avatar} name=\"avatar\" placeholder=\"https://example.com/avatar.jpg\" type=\"text\" />\n      </label>\n      <label>\n        <span>Notes</span>\n        <textarea defaultValue={contact.notes} name=\"notes\" rows={6} />\n      </label>\n      <p>\n        <button type=\"submit\">Save</button>\n        <button onClick={() => navigate(-1)} type=\"button\">\n          Cancel </button>\n      </p>\n    </Form>;\n}\n_s(EditContact, \"hNBbUOQ8Y0dVUNq/e/mHDN0KVVU=\", false, function () {\n  return [useLoaderData, useNavigate];\n});\n_c = EditContact;\nvar _c;\n$RefreshReg$(_c, \"EditContact\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAA+B;AAoCvB;AAxDR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+CAAiD,EAAE;AAAA,EAC5F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA0C;AAC1C,cAAY,IAAI,eAAe;AACjC;AA+Be,SAAR,cAA+B;AACpC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,WAAW,YAAY;AAC7B,SAAO,mDAAC,QAAK,IAAG,gBAAe,QAAO,QAClC;AAAA,uDAAC,OACC;AAAA,yDAAC,UAAK,oBAAN;AAAA;AAAA;AAAA;AAAA,aAAU;AAAA,MACV,mDAAC,WAAM,cAAc,QAAQ,OAAO,cAAW,cAAa,MAAK,SAAQ,MAAK,QAAO,aAAY,WAAjG;AAAA;AAAA;AAAA;AAAA,aAAyG;AAAA,MACzG,mDAAC,WAAM,cAAW,aAAY,cAAc,QAAQ,MAAM,MAAK,QAAO,aAAY,QAAO,MAAK,UAA9F;AAAA;AAAA;AAAA;AAAA,aAAqG;AAAA,SAHvG;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA,mDAAC,WACC;AAAA,yDAAC,UAAK,uBAAN;AAAA;AAAA;AAAA;AAAA,aAAa;AAAA,MACb,mDAAC,WAAM,cAAc,QAAQ,SAAS,MAAK,WAAU,aAAY,SAAQ,MAAK,UAA9E;AAAA;AAAA;AAAA;AAAA,aAAqF;AAAA,SAFvF;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,WACC;AAAA,yDAAC,UAAK,0BAAN;AAAA;AAAA;AAAA;AAAA,aAAgB;AAAA,MAChB,mDAAC,WAAM,cAAW,cAAa,cAAc,QAAQ,QAAQ,MAAK,UAAS,aAAY,kCAAiC,MAAK,UAA7H;AAAA;AAAA;AAAA;AAAA,aAAoI;AAAA,SAFtI;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,WACC;AAAA,yDAAC,UAAK,qBAAN;AAAA;AAAA;AAAA;AAAA,aAAW;AAAA,MACX,mDAAC,cAAS,cAAc,QAAQ,OAAO,MAAK,SAAQ,MAAM,KAA1D;AAAA;AAAA;AAAA;AAAA,aAA6D;AAAA,SAF/D;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,OACC;AAAA,yDAAC,YAAO,MAAK,UAAS,oBAAtB;AAAA;AAAA;AAAA;AAAA,aAA0B;AAAA,MAC1B,mDAAC,YAAO,SAAS,MAAM,SAAS,EAAE,GAAG,MAAK,UAAS,uBAAnD;AAAA;AAAA;AAAA;AAAA,aACS;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OAtBG;AAAA;AAAA;AAAA;AAAA,SAuBL;AACJ;AACA,GAAG,aAAa,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,eAAe,WAAW;AACpC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
